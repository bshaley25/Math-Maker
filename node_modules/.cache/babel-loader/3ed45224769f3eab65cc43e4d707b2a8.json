{"ast":null,"code":"var _jsxFileName = \"/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './stylesheets/App.scss';\nimport Grid from './components/Grid';\nimport Calculator from './components/Calculator';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\nimport Test from './components/test';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gridData: [],\n      columns: 30,\n      rows: 20\n    };\n\n    this.createGrid = () => {\n      const gridData = [];\n\n      for (let i = 0; i < 600; i++) {\n        const x = i % 30;\n        const y = Math.floor(i / 30);\n        const position = `${x},${y}`;\n        gridData[i] = {\n          position,\n          value: ''\n        };\n      }\n\n      this.setState({\n        gridData\n      });\n    };\n\n    this.updateCell = (position, value) => {\n      const newGridData = this.state.gridData.map(cell => {\n        if (cell.position === position) {\n          return {\n            position,\n            value\n          };\n        } else {\n          return cell;\n        }\n      });\n      this.setState({\n        gridData: newGridData\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.createGrid();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      clearGrid: this.createGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Calculator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 50,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      gridData: this.state.gridData,\n      updateCell: this.updateCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  } // render() {\n  //   return (\n  //     <>\n  //       <Header></Header>\n  //       <MathMaker></MathMaker>\n  //       <Footer></Footer>\n  //     </>\n  //   );\n  // }\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/App.js"],"names":["React","Component","Grid","Calculator","Header","Footer","Test","App","state","gridData","columns","rows","createGrid","i","x","y","Math","floor","position","value","setState","updateCell","newGridData","map","cell","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,wBAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,IAAP,MAAiB,mBAAjB;;AAGA,MAAMC,GAAN,SAAkBN,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BO,KAF0B,GAElB;AACNC,MAAAA,QAAQ,EAAE,EADJ;AAENC,MAAAA,OAAO,EAAE,EAFH;AAGNC,MAAAA,IAAI,EAAE;AAHA,KAFkB;;AAAA,SAQ1BC,UAR0B,GAQb,MAAM;AACf,YAAMH,QAAQ,GAAG,EAAjB;;AACA,WAAI,IAAII,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,GAAd,EAAkBA,CAAC,EAAnB,EAAuB;AACnB,cAAMC,CAAC,GAAGD,CAAC,GAAG,EAAd;AACA,cAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,EAAf,CAAV;AACA,cAAMK,QAAQ,GAAI,GAAEJ,CAAE,IAAGC,CAAE,EAA3B;AACAN,QAAAA,QAAQ,CAACI,CAAD,CAAR,GAAc;AAACK,UAAAA,QAAD;AAAWC,UAAAA,KAAK,EAAC;AAAjB,SAAd;AACH;;AACH,WAAKC,QAAL,CAAc;AAACX,QAAAA;AAAD,OAAd;AACD,KAjByB;;AAAA,SAuB1BY,UAvB0B,GAuBb,CAACH,QAAD,EAAWC,KAAX,KAAqB;AAChC,YAAMG,WAAW,GAAG,KAAKd,KAAL,CAAWC,QAAX,CAAoBc,GAApB,CAAwBC,IAAI,IAAI;AAClD,YAAGA,IAAI,CAACN,QAAL,KAAkBA,QAArB,EAA+B;AAC7B,iBAAO;AAACA,YAAAA,QAAD;AAAWC,YAAAA;AAAX,WAAP;AACD,SAFD,MAEO;AACL,iBAAOK,IAAP;AACD;AACF,OANmB,CAApB;AAOA,WAAKJ,QAAL,CAAc;AAACX,QAAAA,QAAQ,EAAEa;AAAX,OAAd;AACD,KAhCyB;AAAA;;AAmB1BG,EAAAA,iBAAiB,GAAG;AAClB,SAAKb,UAAL;AACD;;AAaDc,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAE,KAAKd,UAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKJ,KAAL,CAAWC,QAA3B;AAAqC,MAAA,UAAU,EAAE,KAAKY,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAHF,eAOE,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPF,CADF;AAWD,GA9CyB,CAiD1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AA1D0B;;AA6D5B,eAAed,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './stylesheets/App.scss';\nimport Grid from './components/Grid'\nimport Calculator from './components/Calculator';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport Test from './components/test'\n\n\nclass App extends Component {\n  \n  state = {\n    gridData: [],\n    columns: 30,\n    rows: 20\n  }\n\n  createGrid = () => {\n      const gridData = []\n      for(let i=0;i<600;i++) {\n          const x = i % 30\n          const y = Math.floor(i / 30)\n          const position = `${x},${y}`\n          gridData[i] = {position, value:''}\n      }\n    this.setState({gridData})\n  }\n\n  componentDidMount() {\n    this.createGrid()\n  }\n\n  updateCell = (position, value) => {\n    const newGridData = this.state.gridData.map(cell => {\n      if(cell.position === position) {\n        return {position, value}\n      } else {\n        return cell\n      }\n    })\n    this.setState({gridData: newGridData})\n  }\n\n  render() {\n    return (\n      <>\n        <Header clearGrid={this.createGrid}></Header>\n        {/* <Test></Test> */}\n        <main>\n          <Calculator ></Calculator>\n          <Grid gridData={this.state.gridData} updateCell={this.updateCell}></Grid>\n        </main>\n        <Footer></Footer>\n      </>\n    ) \n  }\n\n\n  // render() {\n  //   return (\n  //     <>\n  //       <Header></Header>\n  //       <MathMaker></MathMaker>\n  //       <Footer></Footer>\n  //     </>\n\n  //   );\n  // }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}