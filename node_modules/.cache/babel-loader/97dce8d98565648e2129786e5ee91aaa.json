{"ast":null,"code":"var _jsxFileName = \"/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/components/SideBar.js\";\nimport React from 'react';\nimport AppBar from '@material-ui/core/AppBar';\nimport { Drawer, List, Divider } from '@material-ui/core';\nexport default (() => {\n  const useStyles = makeStyles(theme => ({\n    root: {\n      display: 'flex'\n    },\n    toolbar: {\n      paddingRight: 24 // keep right padding when drawer closed\n\n    },\n    toolbarIcon: {\n      display: 'flex',\n      alignItems: 'center',\n      justifyContent: 'flex-end',\n      padding: '0 8px',\n      ...theme.mixins.toolbar\n    },\n    appBar: {\n      zIndex: theme.zIndex.drawer + 1,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      })\n    },\n    appBarShift: {\n      marginLeft: drawerWidth,\n      width: `calc(100% - ${drawerWidth}px)`,\n      transition: theme.transitions.create(['width', 'margin'], {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    menuButton: {\n      marginRight: 36\n    },\n    menuButtonHidden: {\n      display: 'none'\n    },\n    title: {\n      flexGrow: 1\n    },\n    drawerPaper: {\n      position: 'relative',\n      whiteSpace: 'nowrap',\n      width: drawerWidth,\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.enteringScreen\n      })\n    },\n    drawerPaperClose: {\n      overflowX: 'hidden',\n      transition: theme.transitions.create('width', {\n        easing: theme.transitions.easing.sharp,\n        duration: theme.transitions.duration.leavingScreen\n      }),\n      width: theme.spacing(7),\n      [theme.breakpoints.up('sm')]: {\n        width: theme.spacing(9)\n      }\n    },\n    appBarSpacer: theme.mixins.toolbar,\n    content: {\n      flexGrow: 1,\n      height: '100vh',\n      overflow: 'auto'\n    },\n    container: {\n      paddingTop: theme.spacing(4),\n      paddingBottom: theme.spacing(4)\n    },\n    paper: {\n      padding: theme.spacing(2),\n      display: 'flex',\n      overflow: 'auto',\n      flexDirection: 'column'\n    }\n  }));\n  return /*#__PURE__*/React.createElement(Drawer, {\n    variant: \"permanent\",\n    classes: {//   paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n    },\n    open: open,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: classes.toolbarIcon,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(IconButton, {\n    onClick: handleDrawerClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(ChevronLeftIcon, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }\n  }))), /*#__PURE__*/React.createElement(Divider, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/components/SideBar.js"],"names":["React","AppBar","Drawer","List","Divider","useStyles","makeStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","appBarShift","marginLeft","drawerWidth","width","enteringScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaper","position","whiteSpace","drawerPaperClose","overflowX","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","open","classes","handleDrawerClose"],"mappings":"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","sourcesContent":["import React from 'react'\nimport AppBar from '@material-ui/core/AppBar'\nimport { Drawer, List, Divider } from '@material-ui/core'\n\n\n\nexport default () => {\n    const useStyles = makeStyles((theme) => ({\n        root: {\n          display: 'flex',\n        },\n        toolbar: {\n          paddingRight: 24, // keep right padding when drawer closed\n        },\n        toolbarIcon: {\n          display: 'flex',\n          alignItems: 'center',\n          justifyContent: 'flex-end',\n          padding: '0 8px',\n          ...theme.mixins.toolbar,\n        },\n        appBar: {\n          zIndex: theme.zIndex.drawer + 1,\n          transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n          }),\n        },\n        appBarShift: {\n          marginLeft: drawerWidth,\n          width: `calc(100% - ${drawerWidth}px)`,\n          transition: theme.transitions.create(['width', 'margin'], {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n        },\n        menuButton: {\n          marginRight: 36,\n        },\n        menuButtonHidden: {\n          display: 'none',\n        },\n        title: {\n          flexGrow: 1,\n        },\n        drawerPaper: {\n          position: 'relative',\n          whiteSpace: 'nowrap',\n          width: drawerWidth,\n          transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.enteringScreen,\n          }),\n        },\n        drawerPaperClose: {\n          overflowX: 'hidden',\n          transition: theme.transitions.create('width', {\n            easing: theme.transitions.easing.sharp,\n            duration: theme.transitions.duration.leavingScreen,\n          }),\n          width: theme.spacing(7),\n          [theme.breakpoints.up('sm')]: {\n            width: theme.spacing(9),\n          },\n        },\n        appBarSpacer: theme.mixins.toolbar,\n        content: {\n          flexGrow: 1,\n          height: '100vh',\n          overflow: 'auto',\n        },\n        container: {\n          paddingTop: theme.spacing(4),\n          paddingBottom: theme.spacing(4),\n        },\n        paper: {\n          padding: theme.spacing(2),\n          display: 'flex',\n          overflow: 'auto',\n          flexDirection: 'column',\n        },\n      }));\n\n    \n    return(\n        <Drawer\n        variant=\"permanent\"\n        classes={{\n        //   paper: clsx(classes.drawerPaper, !open && classes.drawerPaperClose),\n        }}\n        open={open}\n      >\n        <div className={classes.toolbarIcon}>\n          <IconButton onClick={handleDrawerClose}>\n            <ChevronLeftIcon />\n          </IconButton>\n        </div>\n        <Divider />\n        {/* <List>{mainListItems}</List>\n        <Divider />\n        <List>{secondaryListItems}</List> */}\n      </Drawer>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}