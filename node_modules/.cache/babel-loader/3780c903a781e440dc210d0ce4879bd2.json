{"ast":null,"code":"var _jsxFileName = \"/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/components/Grid.js\";\nimport React, { useState } from 'react';\nimport Cell from './Cell';\nimport html2canvas from 'html2canvas';\nexport default (() => {\n  const [cellValues, setCellValues] = useState({});\n  const makecells = [];\n\n  for (let i = 600; i < 1; i--) {\n    const x = i % 10;\n    const y = Math.floor(i / 10);\n    const position = `${x},${y}`;\n    makecells.shift( /*#__PURE__*/React.createElement(Cell, {\n      id: position,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 15,\n        columnNumber: 25\n      }\n    })); // setCellValues({... })\n  }\n\n  const updateState = () => {\n    console.log(makecells);\n    useState();\n  };\n\n  const handleClick = event => {\n    html2canvas(event.target).then(function (canvas) {\n      document.body.appendChild(canvas);\n    });\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"grid\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 13\n    }\n  }, makecells, updateState()));\n});","map":{"version":3,"sources":["/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/components/Grid.js"],"names":["React","useState","Cell","html2canvas","cellValues","setCellValues","makecells","i","x","y","Math","floor","position","shift","updateState","console","log","handleClick","event","target","then","canvas","document","body","appendChild"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,WAAP,MAAwB,aAAxB;AAEA,gBAAe,MAAM;AAEjB,QAAM,CAAEC,UAAF,EAAcC,aAAd,IAAgCJ,QAAQ,CAAC,EAAD,CAA9C;AAEA,QAAMK,SAAS,GAAG,EAAlB;;AACA,OAAI,IAAIC,CAAC,GAAC,GAAV,EAAcA,CAAC,GAAC,CAAhB,EAAkBA,CAAC,EAAnB,EAAuB;AACnB,UAAMC,CAAC,GAAGD,CAAC,GAAG,EAAd;AACA,UAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,EAAf,CAAV;AACA,UAAMK,QAAQ,GAAI,GAAEJ,CAAE,IAAGC,CAAE,EAA3B;AAEAH,IAAAA,SAAS,CAACO,KAAV,eAAgB,oBAAC,IAAD;AAAM,MAAA,EAAE,EAAED,QAAV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAAhB,EALmB,CAOnB;AACH;;AAED,QAAME,WAAW,GAAG,MAAM;AACtBC,IAAAA,OAAO,CAACC,GAAR,CAAYV,SAAZ;AACAL,IAAAA,QAAQ;AAGX,GALD;;AAQA,QAAMgB,WAAW,GAAIC,KAAD,IAAW;AAC3Bf,IAAAA,WAAW,CAACe,KAAK,CAACC,MAAP,CAAX,CACKC,IADL,CACU,UAASC,MAAT,EAAiB;AACvBC,MAAAA,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BH,MAA1B;AACH,KAHD;AAIH,GALD;;AAOA,sBACI,uDACI;AAAM,IAAA,SAAS,EAAC,MAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACKf,SADL,EAEKQ,WAAW,EAFhB,CADJ,CADJ;AASH,CAvCD","sourcesContent":["import React, { useState } from 'react'\nimport Cell from './Cell'\nimport html2canvas from 'html2canvas';\n\nexport default () => {\n\n    const [ cellValues, setCellValues ] = useState({})\n\n    const makecells = []\n    for(let i=600;i<1;i--) {\n        const x = i % 10\n        const y = Math.floor(i / 10)\n        const position = `${x},${y}`\n\n        makecells.shift(<Cell id={position}></Cell>)\n\n        // setCellValues({... })\n    }\n\n    const updateState = () => {\n        console.log(makecells)\n        useState(\n            \n        )\n    }\n    \n\n    const handleClick = (event) => {\n        html2canvas(event.target)\n            .then(function(canvas) {\n            document.body.appendChild(canvas);\n        });\n    }\n\n    return (\n        <>\n            <div  className='grid' >\n                {makecells}\n                {updateState()}\n            </div>\n        </>\n    )\n    \n}"]},"metadata":{},"sourceType":"module"}