{"ast":null,"code":"var _jsxFileName = \"/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/App.js\";\nimport React, { Component } from 'react'; // import './stylesheets/App.scss';\n\nimport './stylesheets/Calculator.scss';\nimport './stylesheets/Grid.scss';\nimport Grid from './components/Grid';\nimport Calculator from './components/Calculator';\nimport Header from './components/Header';\nimport SideBar from './components/SideBar'; // import Footer from './components/Footer'\n\nimport Container from '@material-ui/core/Container';\nimport CssBaseline from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    display: 'flex'\n  },\n  toolbar: {\n    paddingRight: 24 // keep right padding when drawer closed\n\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    })\n  },\n  menuButton: {\n    marginRight: 36\n  },\n  menuButtonHidden: {\n    display: 'none'\n  },\n  title: {\n    flexGrow: 1\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9)\n    }\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto'\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4)\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column'\n  },\n  fixedHeight: {\n    height: 240\n  }\n}));\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.classes = useStyles();\n    this.state = {\n      gridData: [],\n      columns: 15,\n      rows: 15,\n      size: 2\n    };\n\n    this.createGrid = () => {\n      const col = this.state.columns;\n      const row = this.state.rows;\n      const gridData = [];\n\n      for (let i = 0; i < col * row; i++) {\n        const x = i % col;\n        const y = Math.floor(i / col);\n        const position = `${x},${y}`;\n        gridData[i] = {\n          position,\n          value: ''\n        };\n      }\n\n      this.setState({\n        gridData\n      });\n    };\n\n    this.updateColumns = event => {\n      this.updategridColumns(event.target.value, this.state.columns);\n      this.setState({\n        columns: parseInt(event.target.value)\n      });\n    };\n\n    this.updategridColumns = (newColCount, oldColCount) => {\n      const oldGridData = this.state.gridData;\n      const row = this.state.rows;\n      const newGridData = [];\n\n      if (newColCount - oldColCount > 0) {\n        // COLUMNS ARE GETTING BIGGER\n        let counter = 0;\n\n        for (let i = 0; i < oldColCount * row; i++) {\n          if ((i + 1) % oldColCount === 0) {\n            const newPosition = `${newColCount - 1},${counter}`;\n            newGridData.push(oldGridData[i]);\n            newGridData.push({\n              position: newPosition,\n              value: ''\n            });\n            counter++;\n          } else {\n            newGridData.push(oldGridData[i]);\n          }\n        }\n      } else if (newColCount - oldColCount < 0) {\n        // COLUMNS ARE GETTING SMALLER\n        for (let i = 0; i < oldColCount * row; i++) {\n          if ((i + 1) % oldColCount === 0) {// console.log()\n          } else {\n            newGridData.push(oldGridData[i]);\n          }\n        }\n      }\n\n      this.setState({\n        gridData: newGridData\n      });\n    };\n\n    this.updateRows = event => {\n      this.updategridRows(event.target.value, this.state.rows);\n      this.setState({\n        rows: parseInt(event.target.value)\n      });\n    };\n\n    this.updategridRows = (newRowCount, oldRowCount) => {\n      const oldGridData = this.state.gridData;\n      const columns = this.state.columns;\n      let newGridData = [];\n\n      if (newRowCount > oldRowCount) {\n        /// ROWS ARE GETTING BIGGER\n        for (let i = 0; i < newRowCount * columns; i++) {\n          const newPosition = `${i % columns},${newRowCount - 1}`;\n\n          if (oldGridData[i]) {\n            newGridData.push(oldGridData[i]);\n          } else {\n            newGridData.push({\n              position: newPosition,\n              value: ''\n            });\n          }\n        }\n      } else if (newRowCount < oldRowCount) {\n        /// ROWS ARE GETTING SMALLER\n        newGridData = oldGridData.slice(0, -1 * columns);\n      }\n\n      this.setState({\n        gridData: newGridData\n      });\n    };\n\n    this.resizeGrid = event => {\n      this.setState({\n        size: event.target.value\n      });\n    };\n\n    this.updateCell = (position, value) => {\n      const newGridData = this.state.gridData.map(cell => {\n        if (cell.position === position) {\n          return {\n            position,\n            value\n          };\n        } else {\n          return cell;\n        }\n      });\n      this.setState({\n        gridData: newGridData\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.createGrid();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(CssBaseline, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 7\n      }\n    }), /*#__PURE__*/React.createElement(Header, {\n      columns: this.state.columns,\n      rows: this.state.rows,\n      size: this.state.size,\n      clearGrid: this.createGrid,\n      updateColumns: this.updateColumns,\n      updateRows: this.updateRows,\n      resetGrid: this.resetGrid,\n      resizeGrid: this.resizeGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(SideBar, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 193,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 194,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Calculator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 195,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      gridData: this.state.gridData,\n      updateCell: this.updateCell,\n      columns: this.state.columns,\n      rows: this.state.rows,\n      size: this.state.size,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 196,\n        columnNumber: 11\n      }\n    })));\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/App.js"],"names":["React","Component","Grid","Calculator","Header","SideBar","Container","CssBaseline","makeStyles","useStyles","theme","root","display","toolbar","paddingRight","toolbarIcon","alignItems","justifyContent","padding","mixins","appBar","zIndex","drawer","transition","transitions","create","easing","sharp","duration","leavingScreen","menuButton","marginRight","menuButtonHidden","title","flexGrow","drawerPaperClose","overflowX","width","spacing","breakpoints","up","appBarSpacer","content","height","overflow","container","paddingTop","paddingBottom","paper","flexDirection","fixedHeight","App","classes","state","gridData","columns","rows","size","createGrid","col","row","i","x","y","Math","floor","position","value","setState","updateColumns","event","updategridColumns","target","parseInt","newColCount","oldColCount","oldGridData","newGridData","counter","newPosition","push","updateRows","updategridRows","newRowCount","oldRowCount","slice","resizeGrid","updateCell","map","cell","componentDidMount","render","resetGrid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import './stylesheets/App.scss';\nimport './stylesheets/Calculator.scss';\nimport './stylesheets/Grid.scss';\nimport Grid from './components/Grid'\nimport Calculator from './components/Calculator';\nimport Header from './components/Header'\nimport SideBar from './components/SideBar'\n// import Footer from './components/Footer'\nimport  Container from '@material-ui/core/Container';\nimport CssBaseline  from '@material-ui/core/CssBaseline';\nimport { makeStyles } from '@material-ui/core/styles'\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    display: 'flex',\n  },\n  toolbar: {\n    paddingRight: 24, // keep right padding when drawer closed\n  },\n  toolbarIcon: {\n    display: 'flex',\n    alignItems: 'center',\n    justifyContent: 'flex-end',\n    padding: '0 8px',\n    ...theme.mixins.toolbar,\n  },\n  appBar: {\n    zIndex: theme.zIndex.drawer + 1,\n    transition: theme.transitions.create(['width', 'margin'], {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n  },\n  menuButton: {\n    marginRight: 36,\n  },\n  menuButtonHidden: {\n    display: 'none',\n  },\n  title: {\n    flexGrow: 1,\n  },\n  drawerPaperClose: {\n    overflowX: 'hidden',\n    transition: theme.transitions.create('width', {\n      easing: theme.transitions.easing.sharp,\n      duration: theme.transitions.duration.leavingScreen,\n    }),\n    width: theme.spacing(7),\n    [theme.breakpoints.up('sm')]: {\n      width: theme.spacing(9),\n    },\n  },\n  appBarSpacer: theme.mixins.toolbar,\n  content: {\n    flexGrow: 1,\n    height: '100vh',\n    overflow: 'auto',\n  },\n  container: {\n    paddingTop: theme.spacing(4),\n    paddingBottom: theme.spacing(4),\n  },\n  paper: {\n    padding: theme.spacing(2),\n    display: 'flex',\n    overflow: 'auto',\n    flexDirection: 'column',\n  },\n  fixedHeight: {\n    height: 240,\n  },\n}));\n\nclass App extends Component {\n\n  classes = useStyles()\n  \n  state = {\n    gridData: [],\n    columns: 15,\n    rows: 15,\n    size: 2\n  }\n\n  componentDidMount() {\n    this.createGrid()\n  }\n\n  createGrid = () => {\n    const col = this.state.columns\n    const row = this.state.rows\n    const gridData = []\n    for(let i=0;i<(col*row);i++) {\n      const x = i % col\n      const y = Math.floor(i / col)\n      const position = `${x},${y}`\n      gridData[i] = {position, value:''}\n    }\n    this.setState({gridData})\n  }\n  \n  updateColumns = (event) => {\n    this.updategridColumns(event.target.value, this.state.columns)\n    this.setState({columns: parseInt(event.target.value)})\n  }\n  \n  updategridColumns = (newColCount, oldColCount) => {\n    const oldGridData = this.state.gridData\n    const row = this.state.rows\n    const newGridData = [] \n\n    if( (newColCount - oldColCount) > 0 ) {       // COLUMNS ARE GETTING BIGGER\n      let counter = 0\n      for(let i=0; i<(oldColCount*row); i++) {\n        if((i+1) % oldColCount === 0 ) {\n          const newPosition = `${(newColCount-1)},${counter}`\n          newGridData.push(oldGridData[i])\n          newGridData.push({position: newPosition, value:''})\n          counter++\n        } else {\n          newGridData.push(oldGridData[i])\n        }\n      }\n\n    } else if ( newColCount - oldColCount < 0 ) {  // COLUMNS ARE GETTING SMALLER\n      for(let i=0; i<(oldColCount*row); i++) {\n        if((i+1) % oldColCount === 0 ) {\n          // console.log()\n        } else {\n          newGridData.push(oldGridData[i])\n        }\n      }\n    }\n    this.setState({gridData: newGridData})\n  }\n\n  updateRows = (event) => {\n    this.updategridRows(event.target.value, this.state.rows)\n    this.setState({rows: parseInt(event.target.value)})\n  }\n  \n  updategridRows = (newRowCount, oldRowCount) => { \n    const oldGridData = this.state.gridData\n    const columns = this.state.columns\n    let newGridData = [] \n\n    if ( newRowCount > oldRowCount) {              /// ROWS ARE GETTING BIGGER\n      for(let i=0; i<(newRowCount*columns); i++) {\n        const newPosition = `${(i % columns)},${ (newRowCount - 1) }`\n        if( oldGridData[i] ) {\n          newGridData.push(oldGridData[i])\n        } else {\n          newGridData.push({position: newPosition, value: ''})\n        }\n      }\n    } else if ( newRowCount < oldRowCount ) {      /// ROWS ARE GETTING SMALLER\n      newGridData = oldGridData.slice( 0 , (-1 * columns) );\n    }\n    this.setState({gridData: newGridData})\n  }\n\n  resizeGrid = (event) => {\n    this.setState({size: event.target.value})\n  }\n\n  updateCell = (position, value) => {\n    const newGridData = this.state.gridData.map(cell => {\n      if(cell.position === position) {\n        return {position, value}\n      } else {\n        return cell\n      }\n    })\n    this.setState({gridData: newGridData})\n  }\n\n  render() {\n    return (\n      <>\n      <CssBaseline/>\n        <Header \n          columns={this.state.columns} \n          rows={this.state.rows} \n          size={this.state.size}\n          clearGrid={this.createGrid} \n          updateColumns={this.updateColumns} \n          updateRows={this.updateRows}\n          resetGrid={this.resetGrid}\n          resizeGrid={this.resizeGrid}\n        />\n        <SideBar/>\n        <Container>\n          <Calculator/>\n          <Grid \n            gridData={this.state.gridData} \n            updateCell={this.updateCell} \n            columns={this.state.columns} \n            rows={this.state.rows} \n            size={this.state.size}\n          />\n        </Container>\n        {/* <Footer></Footer> */}\n      </>\n    ) \n  }\n\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}