{"ast":null,"code":"var _jsxFileName = \"/Users/bshaley/Development/Projects/Math-Maker/src/components/Grid.js\";\nimport React, { useState } from 'react';\nimport Cell from './Cell';\nimport '../stylesheets/Grid.scss';\nexport default (({\n  gridData,\n  updateCell,\n  columns,\n  rows,\n  size\n}) => {\n  const [touchValue, setTouchValue] = useState('');\n\n  const handleTouchValue = value => {\n    setTouchValue(value);\n  };\n\n  const makecells = gridData.map(cell => /*#__PURE__*/React.createElement(Cell, Object.assign({\n    key: cell.position\n  }, cell, {\n    updateCell: updateCell,\n    touchValue: touchValue,\n    handleTouchValue: handleTouchValue,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 44\n    }\n  })));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    id: \"grid\",\n    className: \"grid\",\n    style: {\n      display: 'grid',\n      gridTemplateColumns: `repeat(${columns}, ${size}rem)`,\n      gridTemplateRows: `repeat(${rows}, ${size}rem)`\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 9\n    }\n  }, makecells);\n});","map":{"version":3,"sources":["/Users/bshaley/Development/Projects/Math-Maker/src/components/Grid.js"],"names":["React","useState","Cell","gridData","updateCell","columns","rows","size","touchValue","setTouchValue","handleTouchValue","value","makecells","map","cell","position","display","gridTemplateColumns","gridTemplateRows"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAO,0BAAP;AAEA,gBAAe,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA,OAAvB;AAAgCC,EAAAA,IAAhC;AAAsCC,EAAAA;AAAtC,CAAD,KAAiD;AAG5D,QAAM,CAACC,UAAD,EAAaC,aAAb,IAA8BR,QAAQ,CAAC,EAAD,CAA5C;;AAEA,QAAMS,gBAAgB,GAAIC,KAAD,IAAW;AAChCF,IAAAA,aAAa,CAACE,KAAD,CAAb;AACH,GAFD;;AAIA,QAAMC,SAAS,GAAGT,QAAQ,CAACU,GAAT,CAAaC,IAAI,iBAAI,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAEA,IAAI,CAACC;AAAhB,KAA8BD,IAA9B;AAAoC,IAAA,UAAU,EAAEV,UAAhD;AAA4D,IAAA,UAAU,EAAEI,UAAxE;AAAoF,IAAA,gBAAgB,EAAEE,gBAAtG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAArB,CAAlB;AAEA,sBACI;AACI,IAAA,EAAE,EAAC,MADP;AAEI,IAAA,SAAS,EAAC,MAFd;AAGI,IAAA,KAAK,EAAE;AACHM,MAAAA,OAAO,EAAE,MADN;AAEHC,MAAAA,mBAAmB,EAAG,UAASZ,OAAQ,KAAIE,IAAK,MAF7C;AAGHW,MAAAA,gBAAgB,EAAG,UAASZ,IAAK,KAAIC,IAAK;AAHvC,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKK,SATL,CADJ;AAaH,CAxBD","sourcesContent":["import React, { useState } from 'react'\nimport Cell from './Cell'\nimport '../stylesheets/Grid.scss'\n\nexport default ({gridData, updateCell, columns, rows, size}) => {\n\n    \n    const [touchValue, setTouchValue] = useState('');\n    \n    const handleTouchValue = (value) => {\n        setTouchValue(value)\n    }\n\n    const makecells = gridData.map(cell => <Cell key={cell.position} {...cell} updateCell={updateCell} touchValue={touchValue} handleTouchValue={handleTouchValue}/>)\n    \n    return (\n        <div \n            id='grid' \n            className='grid'\n            style={{\n                display: 'grid',\n                gridTemplateColumns: `repeat(${columns}, ${size}rem)`,\n                gridTemplateRows: `repeat(${rows}, ${size}rem)`,\n            }}\n        >\n            {makecells}\n        </div>\n    )\n}"]},"metadata":{},"sourceType":"module"}