{"ast":null,"code":"var _jsxFileName = \"/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/components/Grid.js\";\nimport React from 'react';\nimport Cell from './Cell';\nimport { array } from 'prop-types';\nexport default (({\n  gridData,\n  updateCell,\n  columns\n}) => {\n  // const makecells = gridData.map(cell => <Cell key={cell.position} {...cell} updateCell={updateCell} />)\n  // const makecells = () => gridData.map((key, value) => <Cell key={key} position={key} value={value} updateCell={updateCell} />)\n  const makecells = () => {\n    const cellArray = [];\n\n    for (const key in gridData) {\n      /*#__PURE__*/\n      React.createElement(Cell, {\n        key: key,\n        position: key,\n        value: gridData.key,\n        updateCell: updateCell,\n        __self: this,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 14,\n          columnNumber: 13\n        }\n      });\n    }\n  };\n\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"grid\",\n    className: \"grid\",\n    style: {\n      display: 'grid',\n      gridTemplateColumns: `repeat(${columns}, 2rem)`,\n      gridTemplateRows: 'repeat(20, 2rem)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 13\n    }\n  }, makecells()));\n});","map":{"version":3,"sources":["/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/components/Grid.js"],"names":["React","Cell","array","gridData","updateCell","columns","makecells","cellArray","key","display","gridTemplateColumns","gridTemplateRows"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,SAASC,KAAT,QAAsB,YAAtB;AAEA,gBAAe,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAD,KAAqC;AAEhD;AACA;AAGA,QAAMC,SAAS,GAAG,MAAM;AACpB,UAAMC,SAAS,GAAG,EAAlB;;AACA,SAAK,MAAMC,GAAX,IAAkBL,QAAlB,EAA4B;AACxB;AAAA,0BAAC,IAAD;AACI,QAAA,GAAG,EAAEK,GADT;AAEI,QAAA,QAAQ,EAAEA,GAFd;AAGI,QAAA,KAAK,EAAEL,QAAQ,CAACK,GAHpB;AAII,QAAA,UAAU,EAAEJ,UAJhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMH;AACJ,GAVD;;AAcA,sBACI,uDACI;AACI,IAAA,EAAE,EAAC,MADP;AAEI,IAAA,SAAS,EAAC,MAFd;AAGI,IAAA,KAAK,EAAE;AACHK,MAAAA,OAAO,EAAE,MADN;AAEHC,MAAAA,mBAAmB,EAAG,UAASL,OAAQ,SAFpC;AAGHM,MAAAA,gBAAgB,EAAE;AAHf,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKL,SAAS,EATd,CADJ,CADJ;AAeH,CAnCD","sourcesContent":["import React from 'react'\nimport Cell from './Cell'\nimport { array } from 'prop-types'\n\nexport default ({gridData, updateCell, columns}) => {\n\n    // const makecells = gridData.map(cell => <Cell key={cell.position} {...cell} updateCell={updateCell} />)\n    // const makecells = () => gridData.map((key, value) => <Cell key={key} position={key} value={value} updateCell={updateCell} />)\n\n\n    const makecells = () => {\n        const cellArray = []\n        for (const key in gridData) {\n            <Cell \n                key={key} \n                position={key} \n                value={gridData.key} \n                updateCell={updateCell}\n            />\n        }\n    }\n\n\n\n    return (\n        <>\n            <div \n                id='grid' \n                className='grid'\n                style={{\n                    display: 'grid',\n                    gridTemplateColumns: `repeat(${columns}, 2rem)`,\n                    gridTemplateRows: 'repeat(20, 2rem)',\n                }}\n            >\n                {makecells()}\n            </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}