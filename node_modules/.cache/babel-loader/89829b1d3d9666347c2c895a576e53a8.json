{"ast":null,"code":"import _classCallCheck from\"/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";import _createClass from\"/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";import _createSuper from\"/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";import _inherits from\"/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";import React,{Component}from'react';// import './stylesheets/App.scss';\nimport'./stylesheets/Calculator.scss';import'./stylesheets/Grid.scss';import Grid from'./components/Grid';import Calculator from'./components/Calculator';import Header from'./components/Header';import Footer from'./components/Footer';import Container from'@material-ui/core/Container';import CssBaseline from'@material-ui/core/CssBaseline';import Main from'./components/Main';import{AppBar,Box}from'@material-ui/core';var App=/*#__PURE__*/function(_Component){_inherits(App,_Component);var _super=_createSuper(App);function App(){var _this;_classCallCheck(this,App);for(var _len=arguments.length,args=new Array(_len),_key=0;_key<_len;_key++){args[_key]=arguments[_key];}_this=_super.call.apply(_super,[this].concat(args));_this.state={gridData:[],columns:10,rows:10,size:2};_this.createGrid=function(){var col=_this.state.columns;var row=_this.state.rows;var gridData=[];for(var i=0;i<col*row;i++){var x=i%col;var y=Math.floor(i/col);var position=\"\".concat(x,\",\").concat(y);gridData[i]={position:position,value:''};}_this.setState({gridData:gridData});};_this.updateColumns=function(event){_this.updategridColumns(event.target.value,_this.state.columns);_this.setState({columns:parseInt(event.target.value)});};_this.updategridColumns=function(newColCount,oldColCount){var oldGridData=_this.state.gridData;var row=_this.state.rows;var newGridData=[];if(newColCount-oldColCount>0){// COLUMNS ARE GETTING BIGGER\nvar counter=0;for(var i=0;i<oldColCount*row;i++){if((i+1)%oldColCount===0){var newPosition=\"\".concat(newColCount-1,\",\").concat(counter);newGridData.push(oldGridData[i]);newGridData.push({position:newPosition,value:''});counter++;}else{newGridData.push(oldGridData[i]);}}}else if(newColCount-oldColCount<0){// COLUMNS ARE GETTING SMALLER\nfor(var _i=0;_i<oldColCount*row;_i++){if((_i+1)%oldColCount===0){// console.log()\n}else{newGridData.push(oldGridData[_i]);}}}_this.setState({gridData:newGridData});};_this.updateRows=function(event){_this.updategridRows(event.target.value,_this.state.rows);_this.setState({rows:parseInt(event.target.value)});};_this.updategridRows=function(newRowCount,oldRowCount){var oldGridData=_this.state.gridData;var columns=_this.state.columns;var newGridData=[];if(newRowCount>oldRowCount){/// ROWS ARE GETTING BIGGER\nfor(var i=0;i<newRowCount*columns;i++){var newPosition=\"\".concat(i%columns,\",\").concat(newRowCount-1);if(oldGridData[i]){newGridData.push(oldGridData[i]);}else{newGridData.push({position:newPosition,value:''});}}}else if(newRowCount<oldRowCount){/// ROWS ARE GETTING SMALLER\nnewGridData=oldGridData.slice(0,-1*columns);}_this.setState({gridData:newGridData});};_this.resizeGrid=function(event){_this.setState({size:event.target.value});};_this.updateCell=function(position,value){var newGridData=_this.state.gridData.map(function(cell){if(cell.position===position){return{position:position,value:value};}else{return cell;}});_this.setState({gridData:newGridData});};return _this;}_createClass(App,[{key:\"componentDidMount\",value:function componentDidMount(){this.createGrid();}},{key:\"render\",value:function render(){return/*#__PURE__*/React.createElement(React.Fragment,null,/*#__PURE__*/React.createElement(CssBaseline,null),/*#__PURE__*/React.createElement(Header,{columns:this.state.columns,rows:this.state.rows,size:this.state.size,clearGrid:this.createGrid,updateColumns:this.updateColumns,updateRows:this.updateRows,resetGrid:this.resetGrid,resizeGrid:this.resizeGrid}),/*#__PURE__*/React.createElement(Main,{gridData:this.state.gridData,updateCell:this.updateCell,columns:this.state.columns,rows:this.state.rows,size:this.state.size}),/*#__PURE__*/React.createElement(Footer,null));}}]);return App;}(Component);export default App;","map":{"version":3,"sources":["/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/App.js"],"names":["React","Component","Grid","Calculator","Header","Footer","Container","CssBaseline","Main","AppBar","Box","App","state","gridData","columns","rows","size","createGrid","col","row","i","x","y","Math","floor","position","value","setState","updateColumns","event","updategridColumns","target","parseInt","newColCount","oldColCount","oldGridData","newGridData","counter","newPosition","push","updateRows","updategridRows","newRowCount","oldRowCount","slice","resizeGrid","updateCell","map","cell","resetGrid"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\n// import './stylesheets/App.scss';\nimport './stylesheets/Calculator.scss';\nimport './stylesheets/Grid.scss';\nimport Grid from './components/Grid'\nimport Calculator from './components/Calculator';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\nimport  Container from '@material-ui/core/Container';\nimport CssBaseline  from '@material-ui/core/CssBaseline';\nimport Main from './components/Main'\nimport { AppBar, Box } from '@material-ui/core';\n\nclass App extends Component {\n  \n  state = {\n    gridData: [],\n    columns: 10,\n    rows: 10,\n    size: 2\n  }\n\n  componentDidMount() {\n    this.createGrid()\n  }\n\n  createGrid = () => {\n    const col = this.state.columns\n    const row = this.state.rows\n    const gridData = []\n    for(let i=0;i<(col*row);i++) {\n      const x = i % col\n      const y = Math.floor(i / col)\n      const position = `${x},${y}`\n      gridData[i] = {position, value:''}\n    }\n    this.setState({gridData})\n  }\n  \n  updateColumns = (event) => {\n    this.updategridColumns(event.target.value, this.state.columns)\n    this.setState({columns: parseInt(event.target.value)})\n  }\n  \n  updategridColumns = (newColCount, oldColCount) => {\n    const oldGridData = this.state.gridData\n    const row = this.state.rows\n    const newGridData = [] \n\n    if( (newColCount - oldColCount) > 0 ) {       // COLUMNS ARE GETTING BIGGER\n      let counter = 0\n      for(let i=0; i<(oldColCount*row); i++) {\n        if((i+1) % oldColCount === 0 ) {\n          const newPosition = `${(newColCount-1)},${counter}`\n          newGridData.push(oldGridData[i])\n          newGridData.push({position: newPosition, value:''})\n          counter++\n        } else {\n          newGridData.push(oldGridData[i])\n        }\n      }\n\n    } else if ( newColCount - oldColCount < 0 ) {  // COLUMNS ARE GETTING SMALLER\n      for(let i=0; i<(oldColCount*row); i++) {\n        if((i+1) % oldColCount === 0 ) {\n          // console.log()\n        } else {\n          newGridData.push(oldGridData[i])\n        }\n      }\n    }\n    this.setState({gridData: newGridData})\n  }\n\n  updateRows = (event) => {\n    this.updategridRows(event.target.value, this.state.rows)\n    this.setState({rows: parseInt(event.target.value)})\n  }\n  \n  updategridRows = (newRowCount, oldRowCount) => { \n    const oldGridData = this.state.gridData\n    const columns = this.state.columns\n    let newGridData = [] \n\n    if ( newRowCount > oldRowCount) {              /// ROWS ARE GETTING BIGGER\n      for(let i=0; i<(newRowCount*columns); i++) {\n        const newPosition = `${(i % columns)},${ (newRowCount - 1) }`\n        if( oldGridData[i] ) {\n          newGridData.push(oldGridData[i])\n        } else {\n          newGridData.push({position: newPosition, value: ''})\n        }\n      }\n    } else if ( newRowCount < oldRowCount ) {      /// ROWS ARE GETTING SMALLER\n      newGridData = oldGridData.slice( 0 , (-1 * columns) );\n    }\n    this.setState({gridData: newGridData})\n  }\n\n  resizeGrid = (event) => {\n    this.setState({size: event.target.value})\n  }\n\n  updateCell = (position, value) => {\n    const newGridData = this.state.gridData.map(cell => {\n      if(cell.position === position) {\n        return {position, value}\n      } else {\n        return cell\n      }\n    })\n    this.setState({gridData: newGridData})\n  }\n\n  render() {\n    return (\n      <>\n       <CssBaseline/>\n        <Header \n            columns={this.state.columns} \n            rows={this.state.rows} \n            size={this.state.size}\n            clearGrid={this.createGrid} \n            updateColumns={this.updateColumns} \n            updateRows={this.updateRows}\n            resetGrid={this.resetGrid}\n            resizeGrid={this.resizeGrid}\n          />\n\n        {/* <Container >\n          <Calculator/>\n          <Grid \n            gridData={this.state.gridData} \n            updateCell={this.updateCell} \n            columns={this.state.columns} \n            rows={this.state.rows} \n            size={this.state.size}\n          />\n        </Container>\n        <Footer></Footer> */}\n\n        <Main\n          gridData={this.state.gridData} \n          updateCell={this.updateCell} \n          columns={this.state.columns} \n          rows={this.state.rows} \n          size={this.state.size}\n        />\n        <Footer/>\n      </>\n    ) \n  }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}