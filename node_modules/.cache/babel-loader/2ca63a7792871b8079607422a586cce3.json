{"ast":null,"code":"var _jsxFileName = \"/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './stylesheets/App.scss'; // import MathMaker from './components/MathMaker'\n\nimport Grid from './Grid';\nimport Calculator from './Calculator';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gridData: []\n    };\n\n    this.createGrid = () => {\n      const gridData = [];\n\n      for (let i = 0; i < 600; i++) {\n        const x = i % 30;\n        const y = Math.floor(i / 30);\n        const position = `${x},${y}`;\n        gridData[i] = {\n          position,\n          value: ''\n        };\n      }\n\n      this.setState({\n        gridData\n      });\n    };\n\n    this.updateCell = (position, value) => {\n      console.log(this.state.gridData);\n      const newGridData = this.state.gridData.map(cell => {\n        if (cell.position === position) {\n          return {\n            position,\n            value\n          };\n        } else {\n          return cell;\n        }\n      });\n      this.setState({\n        gridData: newGridData\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.createGrid();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Calculator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      gridData: this.state.gridData,\n      updateCell: this.updateCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 13\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }\n    }));\n  } // render() {\n  //   return (\n  //     <>\n  //       <Header></Header>\n  //       <MathMaker></MathMaker>\n  //       <Footer></Footer>\n  //     </>\n  //   );\n  // }\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/App.js"],"names":["React","Component","Grid","Calculator","Header","Footer","App","state","gridData","createGrid","i","x","y","Math","floor","position","value","setState","updateCell","console","log","newGridData","map","cell","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,wBAAP,C,CACA;;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAFkB;;AAAA,SAM1BC,UAN0B,GAMb,MAAM;AACf,YAAMD,QAAQ,GAAG,EAAjB;;AACA,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,GAAd,EAAkBA,CAAC,EAAnB,EAAuB;AACnB,cAAMC,CAAC,GAAGD,CAAC,GAAG,EAAd;AACA,cAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,EAAf,CAAV;AACA,cAAMK,QAAQ,GAAI,GAAEJ,CAAE,IAAGC,CAAE,EAA3B;AACAJ,QAAAA,QAAQ,CAACE,CAAD,CAAR,GAAc;AAACK,UAAAA,QAAD;AAAWC,UAAAA,KAAK,EAAC;AAAjB,SAAd;AACH;;AACD,WAAKC,QAAL,CAAc;AAACT,QAAAA;AAAD,OAAd;AACH,KAfyB;;AAAA,SAqB1BU,UArB0B,GAqBb,CAACH,QAAD,EAAWC,KAAX,KAAqB;AAC9BG,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKb,KAAL,CAAWC,QAAvB;AACA,YAAMa,WAAW,GAAG,KAAKd,KAAL,CAAWC,QAAX,CAAoBc,GAApB,CAAwBC,IAAI,IAAI;AAChD,YAAGA,IAAI,CAACR,QAAL,KAAkBA,QAArB,EAA+B;AAC3B,iBAAO;AAACA,YAAAA,QAAD;AAAWC,YAAAA;AAAX,WAAP;AACH,SAFD,MAEO;AACH,iBAAOO,IAAP;AACH;AACJ,OANmB,CAApB;AAQA,WAAKN,QAAL,CAAc;AAACT,QAAAA,QAAQ,EAAEa;AAAX,OAAd;AACH,KAhCyB;AAAA;;AAiB1BG,EAAAA,iBAAiB,GAAG;AAClB,SAAKf,UAAL;AACD;;AAeDgB,EAAAA,MAAM,GAAG;AACL,wBACE,uDACA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADA,eAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACI,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADJ,eAGI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKlB,KAAL,CAAWC,QAA3B;AAAqC,MAAA,UAAU,EAAE,KAAKU,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAHJ,CAFA,eAOA,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAPA,CADF;AAWH,GA9CyB,CAiD1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AA1D0B;;AA6D5B,eAAeZ,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './stylesheets/App.scss';\n// import MathMaker from './components/MathMaker'\nimport Grid from './Grid'\nimport Calculator from './Calculator';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\n\nclass App extends Component {\n  \n  state = {\n    gridData: []\n  }\n\n  createGrid = () => {\n      const gridData = []\n      for(let i=0;i<600;i++) {\n          const x = i % 30\n          const y = Math.floor(i / 30)\n          const position = `${x},${y}`\n          gridData[i] = {position, value:''}\n      }\n      this.setState({gridData})\n  }\n\n  componentDidMount() {\n    this.createGrid()\n  }\n\n  updateCell = (position, value) => {\n      console.log(this.state.gridData)\n      const newGridData = this.state.gridData.map(cell => {\n          if(cell.position === position) {\n              return {position, value}\n          } else {\n              return cell\n          }\n      })\n\n      this.setState({gridData: newGridData})\n  }\n\n  render() {\n      return (\n        <>\n        <Header></Header>\n        <main>\n            <Calculator ></Calculator>\n            {/* <input type=\"range\" min=\"10\" max=\"50\" class=\"slider\"></input> */}\n            <Grid gridData={this.state.gridData} updateCell={this.updateCell}></Grid>\n        </main>\n        <Footer></Footer>\n        </>\n      ) \n  }\n\n\n  // render() {\n  //   return (\n  //     <>\n  //       <Header></Header>\n  //       <MathMaker></MathMaker>\n  //       <Footer></Footer>\n  //     </>\n\n  //   );\n  // }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}