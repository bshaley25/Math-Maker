{"ast":null,"code":"var _jsxFileName = \"/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/components/Grid.js\";\nimport React from 'react';\nimport Cell from './Cell';\nexport default (({\n  gridData,\n  updateCell,\n  columns\n}) => {\n  // const makecells = gridData.map(cell => <Cell key={cell.position} {...cell} updateCell={updateCell} />)\n  const makecells = gridData.map((key, value) => /*#__PURE__*/React.createElement(Cell, {\n    key: key,\n    updateCell: updateCell,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 52\n    }\n  }));\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n    id: \"grid\",\n    className: \"grid\",\n    style: {\n      display: 'grid',\n      gridTemplateColumns: `repeat(${columns}, 2rem)`,\n      gridTemplateRows: 'repeat(20, 2rem)'\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }\n  }, makecells));\n});","map":{"version":3,"sources":["/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/components/Grid.js"],"names":["React","Cell","gridData","updateCell","columns","makecells","map","key","value","display","gridTemplateColumns","gridTemplateRows"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,IAAP,MAAiB,QAAjB;AAEA,gBAAe,CAAC;AAACC,EAAAA,QAAD;AAAWC,EAAAA,UAAX;AAAuBC,EAAAA;AAAvB,CAAD,KAAqC;AAEhD;AACA,QAAMC,SAAS,GAAGH,QAAQ,CAACI,GAAT,CAAa,CAACC,GAAD,EAAMC,KAAN,kBAAgB,oBAAC,IAAD;AAAM,IAAA,GAAG,EAAED,GAAX;AAAgB,IAAA,UAAU,EAAEJ,UAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAA7B,CAAlB;AAGA,sBACI,uDACI;AACI,IAAA,EAAE,EAAC,MADP;AAEI,IAAA,SAAS,EAAC,MAFd;AAGI,IAAA,KAAK,EAAE;AACHM,MAAAA,OAAO,EAAE,MADN;AAEHC,MAAAA,mBAAmB,EAAG,UAASN,OAAQ,SAFpC;AAGHO,MAAAA,gBAAgB,EAAE;AAHf,KAHX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KASKN,SATL,CADJ,CADJ;AAeH,CArBD","sourcesContent":["import React from 'react'\nimport Cell from './Cell'\n\nexport default ({gridData, updateCell, columns}) => {\n\n    // const makecells = gridData.map(cell => <Cell key={cell.position} {...cell} updateCell={updateCell} />)\n    const makecells = gridData.map((key, value) => <Cell key={key} updateCell={updateCell} />)\n\n\n    return (\n        <>\n            <div \n                id='grid' \n                className='grid'\n                style={{\n                    display: 'grid',\n                    gridTemplateColumns: `repeat(${columns}, 2rem)`,\n                    gridTemplateRows: 'repeat(20, 2rem)',\n                }}\n            >\n                {makecells}\n            </div>\n        </>\n    )\n}"]},"metadata":{},"sourceType":"module"}