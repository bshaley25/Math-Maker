{"ast":null,"code":"var _jsxFileName = \"/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/App.js\";\nimport React, { Component } from 'react';\nimport './stylesheets/App.scss';\nimport Grid from './components/Grid';\nimport Calculator from './components/Calculator';\nimport Header from './components/Header';\nimport Footer from './components/Footer';\n\nclass App extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      gridData: []\n    };\n\n    this.createGrid = () => {\n      const gridData = [];\n\n      for (let i = 0; i < 600; i++) {\n        const x = i % 30;\n        const y = Math.floor(i / 30);\n        const position = `${x},${y}`;\n        gridData[i] = {\n          position,\n          value: ''\n        };\n      }\n\n      this.setState({\n        gridData\n      });\n    };\n\n    this.clearGrid = () => {\n      const newGridData = this.state.gridData.map(cell => cell.value = '');\n      console.log(newGridData);\n    };\n\n    this.updateCell = (position, value) => {\n      console.log(this.state.gridData);\n      const newGridData = this.state.gridData.map(cell => {\n        if (cell.position === position) {\n          return {\n            position,\n            value\n          };\n        } else {\n          return cell;\n        }\n      });\n      this.setState({\n        gridData: newGridData\n      });\n    };\n  }\n\n  componentDidMount() {\n    this.createGrid();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Header, {\n      clearGrid: clearGrid,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(\"main\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(Calculator, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }\n    }), /*#__PURE__*/React.createElement(Grid, {\n      gridData: this.state.gridData,\n      updateCell: this.updateCell,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }\n    })), /*#__PURE__*/React.createElement(Footer, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }\n    }));\n  } // render() {\n  //   return (\n  //     <>\n  //       <Header></Header>\n  //       <MathMaker></MathMaker>\n  //       <Footer></Footer>\n  //     </>\n  //   );\n  // }\n\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/App.js"],"names":["React","Component","Grid","Calculator","Header","Footer","App","state","gridData","createGrid","i","x","y","Math","floor","position","value","setState","clearGrid","newGridData","map","cell","console","log","updateCell","componentDidMount","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,wBAAP;AACA,OAAOC,IAAP,MAAiB,mBAAjB;AACA,OAAOC,UAAP,MAAuB,yBAAvB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,OAAOC,MAAP,MAAmB,qBAAnB;;AAGA,MAAMC,GAAN,SAAkBL,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAE1BM,KAF0B,GAElB;AACNC,MAAAA,QAAQ,EAAE;AADJ,KAFkB;;AAAA,SAM1BC,UAN0B,GAMb,MAAM;AACf,YAAMD,QAAQ,GAAG,EAAjB;;AACA,WAAI,IAAIE,CAAC,GAAC,CAAV,EAAYA,CAAC,GAAC,GAAd,EAAkBA,CAAC,EAAnB,EAAuB;AACnB,cAAMC,CAAC,GAAGD,CAAC,GAAG,EAAd;AACA,cAAME,CAAC,GAAGC,IAAI,CAACC,KAAL,CAAWJ,CAAC,GAAG,EAAf,CAAV;AACA,cAAMK,QAAQ,GAAI,GAAEJ,CAAE,IAAGC,CAAE,EAA3B;AACAJ,QAAAA,QAAQ,CAACE,CAAD,CAAR,GAAc;AAACK,UAAAA,QAAD;AAAWC,UAAAA,KAAK,EAAC;AAAjB,SAAd;AACH;;AACH,WAAKC,QAAL,CAAc;AAACT,QAAAA;AAAD,OAAd;AACD,KAfyB;;AAAA,SAiB1BU,SAjB0B,GAiBd,MAAM;AAChB,YAAMC,WAAW,GAAG,KAAKZ,KAAL,CAAWC,QAAX,CAAoBY,GAApB,CAAwBC,IAAI,IAAIA,IAAI,CAACL,KAAL,GAAa,EAA7C,CAApB;AACAM,MAAAA,OAAO,CAACC,GAAR,CAAYJ,WAAZ;AACD,KApByB;;AAAA,SA0B1BK,UA1B0B,GA0Bb,CAACT,QAAD,EAAWC,KAAX,KAAqB;AAC9BM,MAAAA,OAAO,CAACC,GAAR,CAAY,KAAKhB,KAAL,CAAWC,QAAvB;AACA,YAAMW,WAAW,GAAG,KAAKZ,KAAL,CAAWC,QAAX,CAAoBY,GAApB,CAAwBC,IAAI,IAAI;AAChD,YAAGA,IAAI,CAACN,QAAL,KAAkBA,QAArB,EAA+B;AAC3B,iBAAO;AAACA,YAAAA,QAAD;AAAWC,YAAAA;AAAX,WAAP;AACH,SAFD,MAEO;AACH,iBAAOK,IAAP;AACH;AACJ,OANmB,CAApB;AAQA,WAAKJ,QAAL,CAAc;AAACT,QAAAA,QAAQ,EAAEW;AAAX,OAAd;AACH,KArCyB;AAAA;;AAsB1BM,EAAAA,iBAAiB,GAAG;AAClB,SAAKhB,UAAL;AACD;;AAeDiB,EAAAA,MAAM,GAAG;AACP,wBACE,uDACE,oBAAC,MAAD;AAAQ,MAAA,SAAS,EAAER,SAAnB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,UAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAE,KAAKX,KAAL,CAAWC,QAA3B;AAAqC,MAAA,UAAU,EAAE,KAAKgB,UAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAFF,CAFF,eAME,oBAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MANF,CADF;AAUD,GAlDyB,CAqD1B;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;;;AA9D0B;;AAiE5B,eAAelB,GAAf","sourcesContent":["import React, { Component } from 'react';\nimport './stylesheets/App.scss';\nimport Grid from './components/Grid'\nimport Calculator from './components/Calculator';\nimport Header from './components/Header'\nimport Footer from './components/Footer'\n\n\nclass App extends Component {\n  \n  state = {\n    gridData: []\n  }\n\n  createGrid = () => {\n      const gridData = []\n      for(let i=0;i<600;i++) {\n          const x = i % 30\n          const y = Math.floor(i / 30)\n          const position = `${x},${y}`\n          gridData[i] = {position, value:''}\n      }\n    this.setState({gridData})\n  }\n\n  clearGrid = () => {\n    const newGridData = this.state.gridData.map(cell => cell.value = '')\n    console.log(newGridData)\n  }\n\n  componentDidMount() {\n    this.createGrid()\n  }\n\n  updateCell = (position, value) => {\n      console.log(this.state.gridData)\n      const newGridData = this.state.gridData.map(cell => {\n          if(cell.position === position) {\n              return {position, value}\n          } else {\n              return cell\n          }\n      })\n\n      this.setState({gridData: newGridData})\n  }\n\n  render() {\n    return (\n      <>\n        <Header clearGrid={clearGrid}></Header>\n        <main>\n          <Calculator ></Calculator>\n          <Grid gridData={this.state.gridData} updateCell={this.updateCell}></Grid>\n        </main>\n        <Footer></Footer>\n      </>\n    ) \n  }\n\n\n  // render() {\n  //   return (\n  //     <>\n  //       <Header></Header>\n  //       <MathMaker></MathMaker>\n  //       <Footer></Footer>\n  //     </>\n\n  //   );\n  // }\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}