{"ast":null,"code":"var _jsxFileName = \"/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/components/PictureModal.js\";\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport html2canvas from 'html2canvas';\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`\n  };\n}\n\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3)\n  }\n})); // const handleClick = (event) => {\n//     console.log(event.currentTarget)\n//     html2canvas(document.getElementById('grid'))\n//         .then(canvas => {\n//             const link = document.getElementById('link')\n//             link.href = canvas.toDataURL();\n//             link.download = \"mypainting.png\";\n//         }\n//     );\n// }\n\nexport default (() => {\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n    html2canvas(document.getElementById('grid')).then(canvas => {\n      const link = document.getElementById('link');\n      const img = document.getElementById('image');\n      link.href = canvas.toDataURL();\n      console.log(canvas);\n      link.download = \"mypainting.png\";\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  }; //   const generateBody = (element) => {\n  //     return (\n  //         <div>\n  //             {element}\n  //         </div>\n  //     )\n  //   }\n\n\n  const body = /*#__PURE__*/React.createElement(\"div\", {\n    style: modalStyle,\n    className: classes.paper,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"img\", {\n    id: \"image\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(\"a\", {\n    id: \"link\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }\n  }, \"Does this work?\"));\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(\"button\", {\n    type: \"button\",\n    onClick: handleOpen,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }\n  }, \"Open Modal\"), /*#__PURE__*/React.createElement(Modal, {\n    open: open,\n    onClose: handleClose,\n    \"aria-labelledby\": \"simple-modal-title\",\n    \"aria-describedby\": \"simple-modal-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }\n  }, body));\n});","map":{"version":3,"sources":["/Users/bshaley/Development/Projects/Math-Maker/mathmakerfrontend/src/components/PictureModal.js"],"names":["React","makeStyles","Modal","html2canvas","rand","Math","round","random","getModalStyle","top","left","transform","useStyles","theme","paper","position","width","backgroundColor","palette","background","border","boxShadow","shadows","padding","spacing","classes","modalStyle","useState","open","setOpen","handleOpen","document","getElementById","then","canvas","link","img","href","toDataURL","console","log","download","handleClose","body"],"mappings":"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","sourcesContent":["import React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Modal from '@material-ui/core/Modal';\nimport html2canvas from 'html2canvas'\n\nfunction rand() {\n  return Math.round(Math.random() * 20) - 10;\n}\n\nfunction getModalStyle() {\n  const top = 50 + rand();\n  const left = 50 + rand();\n\n  return {\n    top: `${top}%`,\n    left: `${left}%`,\n    transform: `translate(-${top}%, -${left}%)`,\n  };\n}\n\n\nconst useStyles = makeStyles((theme) => ({\n  paper: {\n    position: 'absolute',\n    width: 400,\n    backgroundColor: theme.palette.background.paper,\n    border: '2px solid #000',\n    boxShadow: theme.shadows[5],\n    padding: theme.spacing(2, 4, 3),\n  },\n}));\n\n// const handleClick = (event) => {\n//     console.log(event.currentTarget)\n//     html2canvas(document.getElementById('grid'))\n//         .then(canvas => {\n//             const link = document.getElementById('link')\n//             link.href = canvas.toDataURL();\n//             link.download = \"mypainting.png\";\n//         }\n//     );\n// }\n\nexport default () => {\n\n  const classes = useStyles();\n  const [modalStyle] = React.useState(getModalStyle);\n  const [open, setOpen] = React.useState(false);\n\n  const handleOpen = () => {\n    setOpen(true);\n    html2canvas(document.getElementById('grid'))\n    .then(canvas => {\n        const link = document.getElementById('link')\n        const img = document.getElementById('image')\n        link.href = canvas.toDataURL();\n        console.log(canvas)\n        link.download = \"mypainting.png\";\n    });\n  };\n\n  const handleClose = () => {\n    setOpen(false);\n  };\n\n//   const generateBody = (element) => {\n//     return (\n//         <div>\n//             {element}\n//         </div>\n//     )\n//   }\n\n\n  const body = (\n    <div style={modalStyle} className={classes.paper}>\n        {/* {canv} */}\n        <img id=\"image\"></img>\n      <a id=\"link\">Does this work?</a>\n\n    </div>\n  );\n\n  return (\n    <div>\n      <button type=\"button\" onClick={handleOpen}>\n        Open Modal\n      </button>\n\n      <Modal\n        open={open}\n        onClose={handleClose}\n        aria-labelledby=\"simple-modal-title\"\n        aria-describedby=\"simple-modal-description\"\n      >\n        {body}\n      </Modal>\n    </div>\n  );\n}"]},"metadata":{},"sourceType":"module"}